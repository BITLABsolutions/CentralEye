/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prabath.ui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author prabath s
 */
public class SubjectsAndClasses extends javax.swing.JDialog {

    /**
     * Creates new form AddService
     */
    public SubjectsAndClasses(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        Dimension dim=Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getWidth()/2-350, dim.height/2-this.getHeight()/2-250);
        initComponents();
        Dimension d=table.getTableHeader().getPreferredSize();
        
        d.height=45;
        table.getTableHeader().setPreferredSize(d);
        jScrollPane4.setPreferredSize(table.getPreferredSize());
        this.setPreferredSize(table.getPreferredSize());
        
        
        
        System.out.println(table.getTableHeader().getPreferredSize());
    }
    
    public JTable getTable(){
        return this.table;
    }
    @Override
    protected void processWindowEvent(WindowEvent e){           /// I have override this method to control the situation that occurs when windows has been closed//
        if(e.getID()==WindowEvent.WINDOW_CLOSING){
            System.out.println("innnn");
            encodeDataFormTable(table);
            //decodeDataToTable(encodeDataFormTable(table));
           // loadToTable(table, addTo2DArray(decodeDataToTable(encodeDataFormTable(table))));
            this.dispose();
            
        }
    }
    
    public String encodeDataFormTable(JTable table){
        String s="";
        
        List <String> list=new ArrayList<>();
        for(int i=0;i<10;i++){
            System.out.println("error:"+table.getValueAt(i, 0));
           
            for(int j=0;j<2;j++){
                try{if(table.getValueAt(i, j).equals("")){System.out.println("error1:"+table.getValueAt(i, j));}}
                catch(NullPointerException e){}
                if(j==1){
                s=s+table.getValueAt(i, j);
                }
                else{
                s=s+table.getValueAt(i, j)+"#";
                }
            }
            list.add(s);
            
            s="";
        }
        for(int i=0;i<10;i++){
            if(i!=9){
            s=s+list.get(i)+"%";
            }
            else{s=s+list.get(i);}
        }
        System.out.println("s:"+s);
        return s;
    }
    public Object[] decodeDataToTable(String s){
        String[] tokens;
        Object[] tokens1;
        String[] tokens3;
        String delims="%";
        tokens=s.split(delims);
        List<String> list=new ArrayList<String>();
        for(int i=0;i<10;i++){
            tokens3=tokens[i].split("#");
            list.addAll(Arrays.asList(tokens3));
            
        }
        tokens1=list.toArray();
        addTo2DArray(tokens1);
        System.out.println(tokens1[0]);
        System.out.println(tokens1[1]);
        System.out.println(tokens1[2]);
        return tokens1;
    }
    public String[][] addTo2DArray(Object[] tokens){
        String[][] arr=new String[10][4];
        int k=0;
        for(int i=0;i<10;i++){
            for(int j=0;j<4;j++){
                arr[i][j]=tokens[k].toString();
                k++;
            }
        }
        System.out.println(arr[0][0]);
        System.out.println(arr[0][1]);
        System.out.println(arr[0][2]);
        return arr;
    }
    
    public void loadToTable(JTable table,String[][] arr){
        for(int i=0;i<10;i++){
            for(int j=0;j<4;j++){
                if(arr[i][j].equals("null")){
                    table.setValueAt(null, i, j);
                }
                else{
                    table.setValueAt(arr[i][j], i, j);
                }
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Subject", "Classes"
            }
        ));
        jScrollPane4.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SubjectsAndClasses dialog = new SubjectsAndClasses(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
